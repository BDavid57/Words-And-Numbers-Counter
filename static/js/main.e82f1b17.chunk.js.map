{"version":3,"sources":["inputComponents/TextAreaInput.js","countComponents/CountEverything.js","countComponents/CountOnlyWords.js","countComponents/CountOnlyNumbers.js","countComponents/SumOfAllNumbers.js","App.js","index.js"],"names":["TextAreaInput","props","className","value","myText","onChange","e","updateMyText","target","cols","rows","CountEverything","onClick","split","forEach","updateCountEverything","el","countEverything","CountOnlyWords","filter","isNaN","updateCountOnlyWords","countOnlyWords","CountOnlyNumbers","updateCountOnlyNumbers","countOnlyNumbers","SumOfAllNumbers","updateMySum","map","item","parseInt","reduce","acc","val","mySum","App","useState","text","setText","setCountEverything","setCountOnlyWords","setCountOnlyNumbers","sum","setSum","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAYeA,EAXO,SAACC,GACnB,OAAO,qBAAKC,UAAU,YAAf,SACH,0BACIC,MAAOF,EAAMG,OACbC,SAAU,SAAAC,GAAC,OAAKL,EAAMM,aAAaD,EAAEE,OAAOL,QAC5CM,KAAK,KACLC,KAAK,UCQFC,EAdS,SAACV,GAOrB,OAAO,sBAAKC,UAAU,aAAf,UACH,wBAAQU,QAPkB,WACRX,EAAMG,OAAOS,MAAM,KAC3BC,SAAQ,kBAAMb,EAAMc,uBAAsB,SAAAC,GAAE,OAAIA,EAAK,SAK/D,8BACA,+BAAOf,EAAMgB,kBACb,wBAAQL,QALiB,kBAAOX,EAAMc,sBAAsB,IAK5D,iCCIOG,EAdQ,SAACjB,GAOpB,OAAO,sBAAKC,UAAU,aAAf,UACH,wBAAQU,QAPiB,WACPX,EAAMG,OAAOS,MAAM,KAC3BM,QAAO,SAAAH,GAAE,OAAII,MAAMJ,MAAKF,SAAQ,kBAAMb,EAAMoB,sBAAqB,SAAAL,GAAE,OAAIA,EAAK,SAKtF,8BACA,+BAAOf,EAAMqB,iBACb,wBAAQV,QALgB,kBAAOX,EAAMoB,qBAAqB,IAK1D,iCCKOE,EAfU,SAACtB,GAQtB,OAAO,sBAAKC,UAAU,aAAf,UACH,wBAAQU,QARmB,WACTX,EAAMG,OAAOS,MAAM,KAC3BM,QAAO,SAAAH,GAAE,OAAKI,MAAMJ,MAAKF,SAAQ,kBAAMb,EAAMuB,wBAAuB,SAAAR,GAAE,OAAIA,EAAK,SAMzF,gCACA,+BAAOf,EAAMwB,mBACb,wBAAQb,QALkB,kBAAOX,EAAMuB,uBAAuB,IAK9D,iCCKOE,EAhBS,SAACzB,GASrB,OAAO,sBAAKC,UAAU,aAAf,UACH,wBAAQU,QATO,WACfX,EAAM0B,YACF1B,EAAMG,OAAOS,MAAM,KAAKM,QAAO,SAAAH,GAAE,OAAKI,MAAMJ,MAAKY,KAAI,SAAAC,GAAI,OAAIC,SAASD,MAAOE,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,OAO5G,iCACA,+BAAOhC,EAAMiC,QACb,wBAAQtB,QALK,kBAAOX,EAAM0B,YAAY,IAKtC,iCCoCOQ,MAxCf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEiCF,mBAAS,GAF1C,mBAENnB,EAFM,KAEWsB,EAFX,OAG+BH,mBAAS,GAHxC,mBAGNd,EAHM,KAGUkB,EAHV,OAImCJ,mBAAS,GAJ5C,mBAINX,EAJM,KAIYgB,EAJZ,OAKSL,mBAAS,GALlB,mBAKNM,EALM,KAKDC,EALC,KAOb,OACE,sBAAKzC,UAAU,MAAf,UAEE,cAAC,EAAD,CACEE,OAAQiC,EACR9B,aAAc+B,IAEhB,sBAAKpC,UAAU,UAAf,UACE,cAAC,EAAD,CACEE,OAAQiC,EACRpB,gBAAiBA,EACjBF,sBAAuBwB,IAEzB,cAAC,EAAD,CACEnC,OAAQiC,EACRf,eAAgBA,EAChBD,qBAAsBmB,IAExB,cAAC,EAAD,CACEpC,OAAQiC,EACRZ,iBAAkBA,EAClBD,uBAAwBiB,IAE1B,cAAC,EAAD,CACErC,OAAQiC,EACRH,MAAOQ,EACPf,YAAagB,WCtCvBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.e82f1b17.chunk.js","sourcesContent":["\r\nconst TextAreaInput = (props) => {\r\n    return <div className='text-area'>\r\n        <textarea\r\n            value={props.myText}\r\n            onChange={e => (props.updateMyText(e.target.value))}\r\n            cols=\"70\"\r\n            rows=\"40\">\r\n        </textarea>\r\n    </div>\r\n}\r\n\r\nexport default TextAreaInput;","\r\nconst CountEverything = (props) => {\r\n    const countEverythingMethod = () => {\r\n        const arrOfText = props.myText.split(' ')\r\n        arrOfText.forEach(() => props.updateCountEverything(el => el + 1))\r\n    }\r\n    const resetCountEverything = () => (props.updateCountEverything(0))\r\n\r\n    return <div className=\"count-area\">\r\n        <button onClick={countEverythingMethod}>Count Everything</button>\r\n        <span>{props.countEverything}</span>\r\n        <button onClick={resetCountEverything}>Reset The Count</button>\r\n    </div>\r\n}\r\n\r\nexport default CountEverything;","\r\nconst CountOnlyWords = (props) => {\r\n    const countOnlyWordsMethod = () => {\r\n        const arrOfText = props.myText.split(' ')\r\n        arrOfText.filter(el => isNaN(el)).forEach(() => props.updateCountOnlyWords(el => el + 1))\r\n    }\r\n    const resetCountOnlyWords = () => (props.updateCountOnlyWords(0))\r\n\r\n    return <div className=\"count-area\">\r\n        <button onClick={countOnlyWordsMethod}>Count Only Words</button>\r\n        <span>{props.countOnlyWords}</span>\r\n        <button onClick={resetCountOnlyWords}>Reset The Count</button>\r\n    </div>\r\n}\r\n\r\nexport default CountOnlyWords;","\r\nconst CountOnlyNumbers = (props) => {\r\n    const countOnlyNumbersMethod = () => {\r\n        const arrOfText = props.myText.split(' ')\r\n        arrOfText.filter(el => !isNaN(el)).forEach(() => props.updateCountOnlyNumbers(el => el + 1))\r\n    }\r\n\r\n    const resetCountOnlyNumbers = () => (props.updateCountOnlyNumbers(0))\r\n\r\n    return <div className=\"count-area\">\r\n        <button onClick={countOnlyNumbersMethod}>Count Only Numbers</button>\r\n        <span>{props.countOnlyNumbers}</span>\r\n        <button onClick={resetCountOnlyNumbers}>Reset The Count</button>\r\n    </div>\r\n}\r\n\r\nexport default CountOnlyNumbers;\r\n","\r\nconst SumOfAllNumbers = (props) => {\r\n    const addNumbers = () => {\r\n        props.updateMySum(\r\n            props.myText.split(' ').filter(el => !isNaN(el)).map(item => parseInt(item)).reduce((acc, val) => acc + val)\r\n        )\r\n    }\r\n\r\n    const resetSum = () => (props.updateMySum(0))\r\n\r\n    return <div className=\"count-area\">\r\n        <button onClick={addNumbers}>Add All The Numbers</button>\r\n        <span>{props.mySum}</span>\r\n        <button onClick={resetSum}>Reset The Count</button>\r\n    </div>\r\n}\r\n\r\nexport default SumOfAllNumbers;\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\n// Import Components\r\nimport TextAreaInput from './inputComponents/TextAreaInput';\r\nimport CountEverything from './countComponents/CountEverything';\r\nimport CountOnlyWords from './countComponents/CountOnlyWords';\r\nimport CountOnlyNumbers from './countComponents/CountOnlyNumbers';\r\nimport SumOfAllNumbers from './countComponents/SumOfAllNumbers';\r\n\r\nfunction App() {\r\n  const [text, setText] = useState('')\r\n  const [countEverything, setCountEverything] = useState(0)\r\n  const [countOnlyWords, setCountOnlyWords] = useState(0)\r\n  const [countOnlyNumbers, setCountOnlyNumbers] = useState(0)\r\n  const [sum, setSum] = useState(0)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <TextAreaInput\r\n        myText={text}\r\n        updateMyText={setText} />\r\n\r\n      <div className='wrapper'>\r\n        <CountEverything\r\n          myText={text}\r\n          countEverything={countEverything}\r\n          updateCountEverything={setCountEverything} />\r\n\r\n        <CountOnlyWords\r\n          myText={text}\r\n          countOnlyWords={countOnlyWords}\r\n          updateCountOnlyWords={setCountOnlyWords} />\r\n\r\n        <CountOnlyNumbers\r\n          myText={text}\r\n          countOnlyNumbers={countOnlyNumbers}\r\n          updateCountOnlyNumbers={setCountOnlyNumbers} />\r\n\r\n        <SumOfAllNumbers\r\n          myText={text}\r\n          mySum={sum}\r\n          updateMySum={setSum} />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}