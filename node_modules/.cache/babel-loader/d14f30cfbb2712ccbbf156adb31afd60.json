{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\git stuffing\\\\src\\\\countComponents\\\\CountOnlyWords.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CountOnlyWords = props => {\n  const countOnlyWordsMethod = () => {\n    const arrOfText = props.myText.split(' ');\n    arrOfText.filter(el => isNaN(el)).forEach(() => props.updateCountOnlyWords(el => el + 1));\n  };\n\n  const resetCountOnlyWords = () => props.updateCountOnlyWords(0);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"count-area\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countOnlyWordsMethod,\n      children: \"Count Only Words\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: props.countOnlyWords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetCountOnlyWords,\n      children: \"Reset The Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n};\n\n_c = CountOnlyWords;\nexport default CountOnlyWords;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountOnlyWords\");","map":{"version":3,"sources":["C:/Users/David/Desktop/git stuffing/src/countComponents/CountOnlyWords.js"],"names":["CountOnlyWords","props","countOnlyWordsMethod","arrOfText","myText","split","filter","el","isNaN","forEach","updateCountOnlyWords","resetCountOnlyWords","countOnlyWords"],"mappings":";;;AACA,MAAMA,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAMC,oBAAoB,GAAG,MAAM;AAC/B,UAAMC,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,GAAnB,CAAlB;AACAF,IAAAA,SAAS,CAACG,MAAV,CAAiBC,EAAE,IAAIC,KAAK,CAACD,EAAD,CAA5B,EAAkCE,OAAlC,CAA0C,MAAMR,KAAK,CAACS,oBAAN,CAA2BH,EAAE,IAAIA,EAAE,GAAG,CAAtC,CAAhD;AACH,GAHD;;AAIA,QAAMI,mBAAmB,GAAG,MAAOV,KAAK,CAACS,oBAAN,CAA2B,CAA3B,CAAnC;;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACH;AAAQ,MAAA,OAAO,EAAER,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAA,gBAAOD,KAAK,CAACW;AAAb;AAAA;AAAA;AAAA;AAAA,YAFG,eAGH;AAAQ,MAAA,OAAO,EAAED,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,CAZD;;KAAMX,c;AAcN,eAAeA,cAAf","sourcesContent":["\r\nconst CountOnlyWords = (props) => {\r\n    const countOnlyWordsMethod = () => {\r\n        const arrOfText = props.myText.split(' ')\r\n        arrOfText.filter(el => isNaN(el)).forEach(() => props.updateCountOnlyWords(el => el + 1))\r\n    }\r\n    const resetCountOnlyWords = () => (props.updateCountOnlyWords(0))\r\n\r\n    return <div className=\"count-area\">\r\n        <button onClick={countOnlyWordsMethod}>Count Only Words</button>\r\n        <span>{props.countOnlyWords}</span>\r\n        <button onClick={resetCountOnlyWords}>Reset The Count</button>\r\n    </div>\r\n}\r\n\r\nexport default CountOnlyWords;"]},"metadata":{},"sourceType":"module"}