{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\git stuffing\\\\src\\\\countComponents\\\\CountOnlyNumbers.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CountOnlyNumbers = props => {\n  const countOnlyNumbersMethod = () => {\n    const arrOfText = props.myText.split(' ');\n    arrOfText.filter(el => isNaN(el) !== true).forEach(() => props.updateCountOnlyNumbers(el => el + 1));\n  };\n\n  const resetCountOnlyNumbers = () => props.updateCountOnlyNumbers(0);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"count-area\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countOnlyNumbersMethod,\n      children: \"Count Only Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: props.countOnlyNumbers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetCountOnlyNumbers,\n      children: \"Reset The Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n};\n\n_c = CountOnlyNumbers;\nexport default CountOnlyNumbers;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountOnlyNumbers\");","map":{"version":3,"sources":["C:/Users/David/Desktop/git stuffing/src/countComponents/CountOnlyNumbers.js"],"names":["CountOnlyNumbers","props","countOnlyNumbersMethod","arrOfText","myText","split","filter","el","isNaN","forEach","updateCountOnlyNumbers","resetCountOnlyNumbers","countOnlyNumbers"],"mappings":";;;AACA,MAAMA,gBAAgB,GAAIC,KAAD,IAAW;AAChC,QAAMC,sBAAsB,GAAG,MAAM;AACjC,UAAMC,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,GAAnB,CAAlB;AACAF,IAAAA,SAAS,CAACG,MAAV,CAAiBC,EAAE,IAAIC,KAAK,CAACD,EAAD,CAAL,KAAc,IAArC,EAA2CE,OAA3C,CAAmD,MAAMR,KAAK,CAACS,sBAAN,CAA6BH,EAAE,IAAIA,EAAE,GAAG,CAAxC,CAAzD;AACH,GAHD;;AAKA,QAAMI,qBAAqB,GAAG,MAAOV,KAAK,CAACS,sBAAN,CAA6B,CAA7B,CAArC;;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACH;AAAQ,MAAA,OAAO,EAAER,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAA,gBAAOD,KAAK,CAACW;AAAb;AAAA;AAAA;AAAA;AAAA,YAFG,eAGH;AAAQ,MAAA,OAAO,EAAED,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,CAbD;;KAAMX,gB;AAeN,eAAeA,gBAAf","sourcesContent":["\r\nconst CountOnlyNumbers = (props) => {\r\n    const countOnlyNumbersMethod = () => {\r\n        const arrOfText = props.myText.split(' ')\r\n        arrOfText.filter(el => isNaN(el) !== true).forEach(() => props.updateCountOnlyNumbers(el => el + 1))\r\n    }\r\n\r\n    const resetCountOnlyNumbers = () => (props.updateCountOnlyNumbers(0))\r\n\r\n    return <div className=\"count-area\">\r\n        <button onClick={countOnlyNumbersMethod}>Count Only Numbers</button>\r\n        <span>{props.countOnlyNumbers}</span>\r\n        <button onClick={resetCountOnlyNumbers}>Reset The Count</button>\r\n    </div>\r\n}\r\n\r\nexport default CountOnlyNumbers;"]},"metadata":{},"sourceType":"module"}