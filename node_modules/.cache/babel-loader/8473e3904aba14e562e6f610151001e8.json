{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Desktop\\\\git stuffing\\\\src\\\\countComponents\\\\SumOfAllNumbers.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SumOfAllNumbers = props => {\n  const addNumbers = () => {\n    const arrOfText = props.myText.split(' ');\n    const myArr = [];\n    arrOfText.filter(el => isNaN(el) !== true).forEach(item => myArr.push(parseInt(item)));\n    const result = myArr.reduce((acc, val) => acc + val);\n    props.updateMySum(result);\n  };\n\n  const resetSum = () => props.updateMySum(0);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"count-area\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNumbers,\n      children: \"Add All The Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: props.mySum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetSum,\n      children: \"Reset The Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n};\n\n_c = SumOfAllNumbers;\nexport default SumOfAllNumbers;\n\nvar _c;\n\n$RefreshReg$(_c, \"SumOfAllNumbers\");","map":{"version":3,"sources":["C:/Users/David/Desktop/git stuffing/src/countComponents/SumOfAllNumbers.js"],"names":["SumOfAllNumbers","props","addNumbers","arrOfText","myText","split","myArr","filter","el","isNaN","forEach","item","push","parseInt","result","reduce","acc","val","updateMySum","resetSum","mySum"],"mappings":";;;AACA,MAAMA,eAAe,GAAIC,KAAD,IAAW;AAC/B,QAAMC,UAAU,GAAG,MAAM;AACrB,UAAMC,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,GAAnB,CAAlB;AACA,UAAMC,KAAK,GAAG,EAAd;AACAH,IAAAA,SAAS,CAACI,MAAV,CAAiBC,EAAE,IAAIC,KAAK,CAACD,EAAD,CAAL,KAAc,IAArC,EAA2CE,OAA3C,CAAmDC,IAAI,IAAIL,KAAK,CAACM,IAAN,CAAWC,QAAQ,CAACF,IAAD,CAAnB,CAA3D;AACA,UAAMG,MAAM,GAAGR,KAAK,CAACS,MAAN,CAAa,CAACC,GAAD,EAAMC,GAAN,KAAcD,GAAG,GAAGC,GAAjC,CAAf;AACAhB,IAAAA,KAAK,CAACiB,WAAN,CAAkBJ,MAAlB;AACH,GAND;;AAQA,QAAMK,QAAQ,GAAG,MAAOlB,KAAK,CAACiB,WAAN,CAAkB,CAAlB,CAAxB;;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACH;AAAQ,MAAA,OAAO,EAAEhB,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAA,gBAAOD,KAAK,CAACmB;AAAb;AAAA;AAAA;AAAA;AAAA,YAFG,eAGH;AAAQ,MAAA,OAAO,EAAED,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,CAhBD;;KAAMnB,e;AAkBN,eAAeA,eAAf","sourcesContent":["\r\nconst SumOfAllNumbers = (props) => {\r\n    const addNumbers = () => {\r\n        const arrOfText = props.myText.split(' ')\r\n        const myArr = []\r\n        arrOfText.filter(el => isNaN(el) !== true).forEach(item => myArr.push(parseInt(item)))\r\n        const result = myArr.reduce((acc, val) => acc + val)\r\n        props.updateMySum(result)\r\n    }\r\n\r\n    const resetSum = () => (props.updateMySum(0))\r\n\r\n    return <div className=\"count-area\">\r\n        <button onClick={addNumbers}>Add All The Numbers</button>\r\n        <span>{props.mySum}</span>\r\n        <button onClick={resetSum}>Reset The Count</button>\r\n    </div>\r\n}\r\n\r\nexport default SumOfAllNumbers;"]},"metadata":{},"sourceType":"module"}